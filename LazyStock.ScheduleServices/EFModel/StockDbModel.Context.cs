//------------------------------------------------------------------------------
// <auto-generated>
//     這個程式碼是由範本產生。
//
//     對這個檔案進行手動變更可能導致您的應用程式產生未預期的行為。
//     如果重新產生程式碼，將會覆寫對這個檔案的手動變更。
// </auto-generated>
//------------------------------------------------------------------------------

namespace LazyStock.ScheduleServices.EFModel
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class StockEntities : DbContext
    {
        public StockEntities()
            : base("name=StockEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<CalStockEPS_Divi> CalStockEPS_Divi { get; set; }
        public virtual DbSet<CalStockInfo> CalStockInfo { get; set; }
        public virtual DbSet<StockPriceDay> StockPriceDay { get; set; }
    
        public virtual ObjectResult<QueryHighQualityList_Result> QueryHighQualityList(Nullable<double> wishRate)
        {
            var wishRateParameter = wishRate.HasValue ?
                new ObjectParameter("WishRate", wishRate) :
                new ObjectParameter("WishRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QueryHighQualityList_Result>("QueryHighQualityList", wishRateParameter);
        }
    
        public virtual int GenStockInfo(string stockNum)
        {
            var stockNumParameter = stockNum != null ?
                new ObjectParameter("StockNum", stockNum) :
                new ObjectParameter("StockNum", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("GenStockInfo", stockNumParameter);
        }
    
        public virtual ObjectResult<QueryHighQualityListForSlot_Result> QueryHighQualityListForSlot(Nullable<double> wishRate)
        {
            var wishRateParameter = wishRate.HasValue ?
                new ObjectParameter("WishRate", wishRate) :
                new ObjectParameter("WishRate", typeof(double));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<QueryHighQualityListForSlot_Result>("QueryHighQualityListForSlot", wishRateParameter);
        }
    }
}
